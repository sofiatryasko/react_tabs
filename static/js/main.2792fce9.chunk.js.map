{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","_ref","tabs","selectedTabId","setSelectedTabId","_jsx","children","className","map","tab","classNames","id","href","concat","onClick","title","content","App","_useState","useState","_useState2","_slicedToArray","selectedTab","find","_jsxs","ReactDOM","render","document","getElementById"],"mappings":"kNAcaA,EAAO,SAAHC,GAA8D,IAAxDC,EAAID,EAAJC,KAAMC,EAAaF,EAAbE,cAAeC,EAAgBH,EAAhBG,iBAC1C,OACEC,cAAA,OAAK,UAAQ,gBAAeC,SAC1BD,cAAA,OAAKE,UAAU,gBAAeD,SAC5BD,cAAA,MAAAC,SACGJ,EAAKM,KAAI,SAAAC,GAAG,OACXJ,cAAA,MACEE,UAAWG,IACTP,IAAkBM,EAAIE,GAAK,YAAc,IAG3C,UAAQ,MAAKL,SAEbD,cAAA,KACEO,KAAI,QAAAC,OAAUV,EAAa,KAC3B,UAAQ,UACRW,QAAS,kBAAMV,EAAiBK,EAAIE,KAAIL,SAEvCG,EAAIM,SARFN,EAAIE,cClBVT,EAAO,CAClB,CAAES,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,IAAAC,EAA0CC,mBAASjB,EAAK,GAAGS,IAAGS,EAAAC,YAAAH,EAAA,GAAvDf,EAAaiB,EAAA,GAAEhB,EAAgBgB,EAAA,GAChCE,EAAoBpB,EAAKqB,MAC7B,SAAAd,GAAG,OAAIA,EAAIE,KAAOR,MACfD,EAAK,GAEFa,EAAmBO,EAAnBP,MAAOC,EAAYM,EAAZN,QAEf,OACEQ,eAAA,OAAKjB,UAAU,UAASD,SAAA,CACtBkB,eAAA,MAAIjB,UAAU,QAAOD,SAAA,CAAC,mBAEnB,IACAS,EAAM,OAGTV,cAACL,EAAI,CACHE,KAAMA,EACNC,cAAeA,EACfC,iBAAkBA,IAEpBC,cAAA,OAAKE,UAAU,QAAQ,UAAQ,cAAaD,SACzCU,QC/BTS,IAASC,OAAOrB,cAACY,EAAG,IAAKU,SAASC,eAAe,W","file":"static/js/main.2792fce9.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nexport interface Tab {\n  id: string,\n  title: string,\n  content: string\n}\n\ninterface TabsProps {\n  tabs: Tab[],\n  selectedTabId: string\n  setSelectedTabId: (selectedTabId:string) => void;\n}\n\nexport const Tabs = ({ tabs, selectedTabId, setSelectedTabId }: TabsProps) => {\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={classNames(\n                selectedTabId === tab.id ? 'is-active' : '',\n              )}\n              key={tab.id}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#tab-${selectedTabId}}`}\n                data-cy=\"TabLink\"\n                onClick={() => setSelectedTabId(tab.id)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs, Tab } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const selectedTab : Tab = tabs.find(\n    tab => tab.id === selectedTabId,\n  ) || tabs[0];\n\n  const { title, content } = selectedTab;\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        `Selected tab is\n        {' '}\n        {title}\n        `\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        setSelectedTabId={setSelectedTabId}\n      />\n      <div className=\"block\" data-cy=\"tab-content\">\n        {content}\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}